name: Deploy to EC2

on:
  push:
    branches:
      - master  # "master" 브랜치에 푸시되면 실행

env:
  AWS_REGION: ap-southeast-2                 # EC2 리전 (예시: us-west-2)
  EC2_INSTANCE: 52.62.100.186               # EC2 퍼블릭 IP 주소
  EC2_USER: ubuntu                          # EC2 사용자
  SSH_PRIVATE_KEY: ${{ secrets.AWS_SSH_PRIVATE_KEY }}  # GitHub Secrets에 저장된 SSH 비공개 키
  DOCKER_IMAGE: filmus-backend              # 빌드한 Docker 이미지 이름
  DOCKER_TAG: latest                        # Docker 이미지 태그 (예시: latest)
  APP_DIR: /home/ubuntu/film-backend/backend # EC2 상의 애플리케이션 디렉토리
  PORT: 80                                  # EC2에서 사용할 포트 (80으로 설정)
  CONTAINER_PORT: 8080                      # Docker 컨테이너에서 사용할 포트 (8080)

permissions:
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    # Docker 이미지를 빌드하기 위해 backend 디렉토리로 이동
    - name: Build Docker image
      run: |
        cd backend  # backend 디렉토리로 이동
        docker build -t $DOCKER_IMAGE:$DOCKER_TAG .

    # EC2로 Docker 이미지 복사
    - name: Copy Docker image to EC2 instance
      run: |
        scp -i ${{ secrets.AWS_SSH_PRIVATE_KEY }} -o StrictHostKeyChecking=no $DOCKER_IMAGE:$DOCKER_TAG $EC2_USER@$EC2_INSTANCE:$APP_DIR

    # EC2에서 Docker 컨테이너 배포
    - name: Deploy Docker container to EC2
      run: |
        ssh -i ${{ secrets.AWS_SSH_PRIVATE_KEY }} -o StrictHostKeyChecking=no $EC2_USER@$EC2_INSTANCE << 'EOF'
          # EC2에서 기존 Docker 컨테이너 중지
          docker stop filmus-backend-container || true
          docker rm filmus-backend-container || true
          
          # 새로운 Docker 컨테이너 실행
          docker run -d -p $PORT:$CONTAINER_PORT --name filmus-backend-container $DOCKER_IMAGE:$DOCKER_TAG
        EOF
